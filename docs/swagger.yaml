definitions:
  models.Post:
    properties:
      content:
        type: string
      createdAt:
        type: string
      deletedAt:
        type: string
      id:
        type: integer
      title:
        type: string
      updatedAt:
        type: string
    type: object
  rest_go_app_types.Error:
    properties:
      message:
        type: string
      success:
        type: boolean
    type: object
  types.AuthRequest:
    properties:
      email:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - password
    type: object
  types.LoginResponse:
    properties:
      token:
        type: string
    type: object
  types.MetaData:
    properties:
      page:
        type: integer
      size:
        type: integer
      total_items:
        type: integer
      total_pages:
        type: integer
    type: object
  types.PostRequest:
    properties:
      content:
        type: string
      title:
        type: string
    type: object
  types.Profile:
    properties:
      dob:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      user:
        $ref: '#/definitions/types.UserResponse'
    type: object
  types.ProfileRequest:
    properties:
      dob:
        type: string
      first_name:
        type: string
      last_name:
        type: string
    required:
    - dob
    - first_name
    - last_name
    type: object
  types.Success-models_Post:
    properties:
      data:
        $ref: '#/definitions/models.Post'
      message:
        type: string
      success:
        type: boolean
    type: object
  types.SuccessWithMeta-array_models_Post:
    properties:
      data:
        items:
          $ref: '#/definitions/models.Post'
        type: array
      message:
        type: string
      meta:
        $ref: '#/definitions/types.MetaData'
      success:
        type: boolean
    type: object
  types.UserResponse:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      updated_at:
        type: string
    type: object
info:
  contact: {}
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Login a user
      parameters:
      - description: User input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/types.AuthRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.LoginResponse'
      summary: Login a user
      tags:
      - auth
  /my-profile:
    get:
      consumes:
      - application/json
      description: get my profile
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Profile'
      security:
      - Bearer: []
      summary: Show my profile
      tags:
      - profile
  /posts:
    get:
      consumes:
      - application/json
      description: get all posts
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.SuccessWithMeta-array_models_Post'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest_go_app_types.Error'
      security:
      - Bearer: []
      summary: Show all posts
      tags:
      - Post
    post:
      consumes:
      - application/json
      description: create a post
      parameters:
      - description: User input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/types.PostRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/types.Success-models_Post'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest_go_app_types.Error'
      security:
      - Bearer: []
      summary: Create a post
      tags:
      - Post
  /posts/{id}:
    delete:
      consumes:
      - application/json
      description: delete a post by id
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest_go_app_types.Error'
      security:
      - Bearer: []
      summary: Delete a post
      tags:
      - Post
    get:
      consumes:
      - application/json
      description: get a post by id
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Success-models_Post'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest_go_app_types.Error'
      security:
      - Bearer: []
      summary: Get a post
      tags:
      - Post
    put:
      consumes:
      - application/json
      description: update a post by id
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      - description: User input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/types.PostRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Success-models_Post'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/rest_go_app_types.Error'
      security:
      - Bearer: []
      summary: Update a post
      tags:
      - Post
  /profiles:
    get:
      consumes:
      - application/json
      description: get all profiles
      parameters:
      - description: Page
        in: query
        name: page
        type: integer
      - description: Size
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/types.Profile'
            type: array
      security:
      - Bearer: []
      summary: Show all profiles
      tags:
      - profile
    post:
      consumes:
      - application/json
      description: Save a profile
      parameters:
      - description: Profile input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/types.ProfileRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/types.Profile'
      security:
      - Bearer: []
      summary: Save a profile
      tags:
      - profile
    put:
      consumes:
      - application/json
      description: Update a profile
      parameters:
      - description: Profile input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/types.ProfileRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Profile'
      security:
      - Bearer: []
      summary: Update a profile
      tags:
      - profile
  /profiles/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a profile
      parameters:
      - description: Profile ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      security:
      - Bearer: []
      summary: Delete a profile
      tags:
      - profile
    get:
      consumes:
      - application/json
      description: get a profile by id
      parameters:
      - description: Profile ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/types.Profile'
      security:
      - Bearer: []
      summary: Get a profile
      tags:
      - profile
  /register:
    post:
      consumes:
      - application/json
      description: Register a new user
      parameters:
      - description: User input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/types.AuthRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/types.UserResponse'
      summary: Register a new user
      tags:
      - auth
securityDefinitions:
  Bearer:
    description: Type "Bearer" followed by a space and JWT token.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
